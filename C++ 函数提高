#include <iostream>
#include <stdlib.h>
#include <string>

using namespace std;
 
 int func(int a,int b=20,int c=30){   //1.函数默认值可以在形参定义,且必须从左至右,若主函数定义 优先主函数默认值 
 	return a+b+c;                     //2.函数声明与函数实现只能有一个默认值 
 }                       
 void  func2(int a,int ) {  //函数占位 类似与占座告诉系统这里有个值 ,现阶段用不上,但是必须要调用 
 	                        //占位参数也可以有默认值 
 	cout<<"this is my func" <<endl;
 	
 	
 	
 }
 
 
 //函数重载,可以让函数名相同提高复用性
 //函数重载条件
 //1.同一作用域下,函数名称相同
 //2.函数参数类型不同,个数不同,顺序不同 ,就是根据参数来调用不同函数 
 void func2(){
 	
 	 cout<<"函数重载"<<endl; 
 } 
 
 //注意,1.引用作为重载的条件
 void func3(int &a) {  //int &a=10   //不合法  没有地址 
 	
 	cout<<"func3(int &a)"<<endl;
 	
 }
  void func3(const int &a) {   // const int &a=10   =  const temp=&a 引用堆区地址 
 	
 	cout<<"func3(const int &a)"<<endl;
 	
 }
 //函数重载碰到默认值会出现二义性,最好不要加默认值 
 
int main(){
	
  cout<<func(10,30)<<endl;
	func2(10,10);
	func2();
	func3(10);//func3(const int &a)
	return 0;
}
